{"version":3,"sources":["components/Note.js","components/Notification.jsx","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","Notification","message","className","baseUrl","noteService","getAll","axios","get","then","res","data","create","newObject","post","update","id","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","initialNotes","notesToShow","filter","map","find","n","changedNote","updatedNote","catch","err","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","Math","random","length","currentNotes","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAiBeA,EAfF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACf,qBACA,iBAEJ,OACI,mCACI,+BACKH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,UCDrCI,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGF,qBAAKC,UAAU,QAAf,SAAwBD,K,gBCL3BE,EAAU,aAoBDC,EANK,CAClBC,OAba,WACb,OAAOC,IAAMC,IAAIJ,GAASK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAa1CC,OAVa,SAACC,GACd,OAAON,IAAMO,KAAKV,EAASS,GAAWJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAUtDI,OAPa,SAACC,EAAIH,GAClB,OAAON,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAAWJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UCP5DO,G,MAAS,WAOb,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,4GAmFSC,EA9EH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACR5B,EAAYC,SAASG,MAAK,SAACyB,GACzBR,EAASQ,QAEV,IAEH,IAqCMC,EAAcN,EAAUJ,EAAQA,EAAMW,QAAO,SAACzC,GAAD,OAAUA,EAAKG,aAElE,OACE,gCACE,uCACA,cAAC,EAAD,CAAcI,QAAS6B,IACvB,8BACE,yBAAQ/B,QAAS,kBAAM8B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGM,EAAYE,KAAI,SAAC1C,GAAD,OACf,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBAlCD,SAACoB,GAC1B,IAAMrB,EAAO8B,EAAMa,MAAK,SAACC,GAAD,OAAOA,EAAEvB,KAAOA,KAClCwB,EAAW,2BAAQ7C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDO,EACGU,OAAOC,EAAIwB,GACX/B,MAAK,SAACgC,GACLf,EAASD,EAAMY,KAAI,SAAC1C,GAAD,OAAWA,EAAKqB,KAAOA,EAAKrB,EAAO8C,SAEvDC,OAAM,SAACC,GACNX,EAAgB,SAAD,OAAUrC,EAAKI,QAAf,uCACf6C,YAAW,WACTZ,EAAgB,QACf,KACHN,EAASD,EAAMW,QAAO,SAAAG,GAAC,OAAIA,EAAEvB,KAAOA,SAoBR6B,CAAmBlD,EAAKqB,MAF3CrB,EAAKqB,SAMhB,uBAAM8B,SAzDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBlD,QAAS4B,EACTuB,KAAM,IAAIC,KACVrD,UAAWsD,KAAKC,SAAW,GAC3BrC,GAAIS,EAAM6B,OAAS,GAGrBjD,EAAYO,OAAOqC,GAAYxC,MAAK,SAAC8C,GACnC7B,EAASD,EAAM+B,OAAOD,IACtB3B,EAAW,QA8CX,UACE,uBAAO6B,MAAO9B,EAAS+B,SA3CJ,SAACX,GACxBnB,EAAWmB,EAAMY,OAAOF,UA2CpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,QC3FNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b60406ff.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important\r\n      ? 'make not important'\r\n      : 'make important'\r\n    \r\n    return (\r\n        <>\r\n            <li>\r\n                {note.content}\r\n                <button onClick={toggleImportance}>{label}</button>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then(res => res.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseUrl, newObject).then(res => res.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject).then(res => res.data);\r\n};\r\n\r\nconst noteService = {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n\r\nexport default noteService;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Note from \"./components/Note\";\r\nimport Notification from \"./components/Notification\";\r\nimport noteService from \"./services/notes\";\r\nimport './App.css';\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16,\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState('');\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    noteService.getAll().then((initialNotes) => {\r\n      setNotes(initialNotes);\r\n    });\r\n  }, []);\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date(),\r\n      important: Math.random() < 0.5,\r\n      id: notes.length + 1,\r\n    };\r\n\r\n    noteService.create(noteObject).then((currentNotes) => {\r\n      setNotes(notes.concat(currentNotes));\r\n      setNewNote(\"\");\r\n    });\r\n  };\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value);\r\n  };\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find((n) => n.id === id);\r\n    const changedNote = { ...note, important: !note.important };\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then((updatedNote) => {\r\n        setNotes(notes.map((note) => (note.id !== id ? note : updatedNote)));\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessage(`Note '${note.content}' was already removed from server.`);\r\n        setTimeout(() => {\r\n          setErrorMessage(null);\r\n        }, 3000);\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      });\r\n  };\r\n\r\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? \"important\" : \"all\"}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note) => (\r\n          <Note\r\n            key={note.id}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}